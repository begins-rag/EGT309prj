apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
spec:
  replicas: 2
  strategy:
    type: RollingUpdate  # Enables rollout and rollback
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      restartPolicy: Always  # âœ… Auto-recovery enabled
      containers:
      - name: app
        image: thaqif101/app:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5010
        env:
        - name: DATA_CLEANING_URL
          value: "http://data-cleaning-service:5001"
        - name: DATA_MODELLING_URL
          value: "http://data-modelling-service:5002"
        - name: DATA_INPUT_URL
          value: "http://data-input-service:5000"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://grafana-k8s-monitoring-alloy-receiver.default.svc.cluster.local:4317"
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: "http://grafana-k8s-monitoring-alloy-receiver.default.svc.cluster.local:4318"
        - name: OTEL_EXPORTER_ZIPKIN_ENDPOINT
          value: "http://grafana-k8s-monitoring-alloy-receiver.default.svc.cluster.local:9411"
        - name: OTEL_SERVICE_NAME
          value: "app-monitor-service"
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
        - name: model-storage
          mountPath: "/mnt/models"
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  selector:
    app: app
  ports:
    - protocol: TCP
      port: 5010
      targetPort: 5010
  type: LoadBalancer

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: app-deployment
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50  # Scale when CPU usage exceeds 50%

---
# At least 1 pod must always be running
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: app-pdb
spec:
  minAvailable: 1  
  selector:
    matchLabels:
      app: app
